<?php
/**
 * This file is part of the <Cmf> project.
 *
 * @subpackage   Cmf
 * @package    Repository
 * @author Etienne de Longeaux <etienne.delongeaux@gmail.com>
 * @since 2012-01-06
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace Sfynx\CmfBundle\Layers\Infrastructure\Persistence\Repository;

use Doctrine\ORM\EntityRepository;
use Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\Traits\TraitTranslation;

/**
 * TranslationWidget Repository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @subpackage   Cmf
 * @package    Repository
 * @author Etienne de Longeaux <etienne.delongeaux@gmail.com>
 */
class TranslationWidgetRepository extends EntityRepository
{
    use TraitTranslation;

    /**
     * Return a translation widget by the widget params
     *
     * @param int        $enabled
     * @param string    $plugin        plugin name of the widget
     * @param string    $action        action name of the widget
     * @param string    $lang        langue of the translation needed.
     *
     * @return \Sfynx\CmfBundle\Layers\Domain\Entity\Page
     * @access public
     *
     * @author Etienne de Longeaux <etienne.delongeaux@gmail.com>
     * @since 2012-01-23
     */
    public function getTranslationByParams($enabled, $plugin, $action, $lang)
    {
        $query = $this->createQueryBuilder('t')
        ->select('t, w')
        ->leftJoin('t.widget', 'w')
        ->where('t.enabled = :enabled')
        ->andWhere('w.plugin = :plugin')
        ->andWhere('w.action = :action')
        ->andWhere('t.langCode = :lang')
        ->setParameters(array(
                'enabled'    => $enabled,
                'plugin'    => strtolower($plugin),
                'action'    => strtolower($action),
                'lang'        => $lang,
        ));
        return $query->getQuery()->getOneOrNullResult();
    }

    /**
     * Return a translation widget by id and lang widget
     *
     * @param int        $idWidget    id widget
     * @param string    $lang        langue of the translation needed.
     *
     * @return \Sfynx\CmfBundle\Layers\Domain\Entity\Page
     * @access public
     *
     * @author Etienne de Longeaux <etienne.delongeaux@gmail.com>
     * @since 2012-01-23
     */
    public function getTranslationById($idWidget, $lang)
    {
        $query = $this->createQueryBuilder('t')
        ->select('t, w')
        ->leftJoin('t.widget', 'w')
        ->where('t.enabled = :enabled')
        ->andWhere('w.id = :widgetID')
        ->andWhere('t.langCode = :lang')
        ->setParameters(array(
                'enabled'    => 1,
                'widgetID'    => (int) $idWidget,
                'lang'        => $lang,
        ));
        return $query->getQuery()->getOneOrNullResult();
    }

}
